═══════════════════════════════════════════════════════════════════════
  MAKHANA ECOMMERCE STORE - COMPLETE SETUP INSTRUCTIONS
═══════════════════════════════════════════════════════════════════════

🎉 Your complete eCommerce website is ready! Follow these steps:

═══════════════════════════════════════════════════════════════════════
STEP 1: INSTALL DEPENDENCIES
═══════════════════════════════════════════════════════════════════════

Open terminal in this folder and run:

    npm install

This will install all required packages (Next.js, React, MongoDB, etc.)

═══════════════════════════════════════════════════════════════════════
STEP 2: SET UP MONGODB DATABASE
═══════════════════════════════════════════════════════════════════════

Option A - MongoDB Atlas (Recommended - Free):
1. Go to: https://www.mongodb.com/cloud/atlas
2. Create free account
3. Create a cluster (Free M0 tier)
4. Create database user with password
5. Allow access from anywhere (0.0.0.0/0)
6. Get connection string (looks like):
   mongodb+srv://username:password@cluster.mongodb.net/makhana-store

Option B - Local MongoDB:
1. Install MongoDB locally
2. Use: mongodb://localhost:27017/makhana-store

═══════════════════════════════════════════════════════════════════════
STEP 3: SET UP EMAIL NOTIFICATIONS
═══════════════════════════════════════════════════════════════════════

For Gmail (Recommended):
1. Go to: https://myaccount.google.com
2. Enable 2-Step Verification
3. Go to Security → App passwords
4. Generate password for "Mail"
5. Copy the 16-character password

═══════════════════════════════════════════════════════════════════════
STEP 4: CREATE .env FILE
═══════════════════════════════════════════════════════════════════════

Create a file named ".env" (without quotes) in this folder.
Copy the content from .env.example and fill in your values:

MONGODB_URI=your_mongodb_connection_string_here
JWT_SECRET=any_random_long_string_here
ADMIN_EMAIL=admin@yourdomain.com
ADMIN_PASSWORD=YourStrongPassword123
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USER=youremail@gmail.com
EMAIL_PASSWORD=your_16_char_app_password
EMAIL_FROM=youremail@gmail.com
NEXT_PUBLIC_SITE_URL=http://localhost:3000

═══════════════════════════════════════════════════════════════════════
STEP 5: RUN THE DEVELOPMENT SERVER
═══════════════════════════════════════════════════════════════════════

In terminal, run:

    npm run dev

Then open your browser and go to:
    http://localhost:3000

═══════════════════════════════════════════════════════════════════════
STEP 6: ACCESS ADMIN PANEL
═══════════════════════════════════════════════════════════════════════

Go to: http://localhost:3000/admin/login

Login with:
- Email: (the one you set in ADMIN_EMAIL)
- Password: (the one you set in ADMIN_PASSWORD)

═══════════════════════════════════════════════════════════════════════
STEP 7: ADD SAMPLE PRODUCTS (OPTIONAL)
═══════════════════════════════════════════════════════════════════════

To quickly populate your store with sample products, run:

    npm run seed

This will add 8 sample Makhana products to your database.

OR manually add products:
1. Login to admin panel
2. Click "Products" → "Add Product"
3. Fill in details and save

For product images, use free image hosting:
- Imgur: https://imgur.com
- ImgBB: https://imgbb.com
- Or any image URL

═══════════════════════════════════════════════════════════════════════
STEP 8: TEST YOUR STORE
═══════════════════════════════════════════════════════════════════════

1. Browse products on homepage
2. Add items to cart
3. Go through checkout process
4. Check admin panel for new order
5. Check your email for order notification

═══════════════════════════════════════════════════════════════════════
DEPLOYING TO VERCEL (PRODUCTION)
═══════════════════════════════════════════════════════════════════════

See DEPLOYMENT.md for complete step-by-step deployment guide.

Quick steps:
1. Push code to GitHub
2. Go to vercel.com
3. Import your repository
4. Add environment variables
5. Deploy!

Your site will be live at: https://your-project.vercel.app

═══════════════════════════════════════════════════════════════════════
FEATURES INCLUDED
═══════════════════════════════════════════════════════════════════════

✅ Beautiful responsive homepage
✅ Product catalog with categories (Plain, Flavored, Premium, Gift Pack)
✅ Product detail pages with image gallery
✅ Shopping cart with quantity management
✅ Checkout with Cash on Delivery
✅ Order confirmation page
✅ Admin login with JWT authentication
✅ Admin dashboard with statistics
✅ Product management (Add/Edit/Delete)
✅ Order management with status updates
✅ Email notifications for new orders
✅ WhatsApp notifications (optional)
✅ Fully responsive design
✅ Modern UI with TailwindCSS

═══════════════════════════════════════════════════════════════════════
FILE STRUCTURE
═══════════════════════════════════════════════════════════════════════

app/
├── page.tsx                    # Homepage
├── products/                   # Product pages
├── cart/                       # Shopping cart
├── checkout/                   # Checkout page
├── order-success/              # Order confirmation
├── admin/                      # Admin panel
│   ├── login/                  # Admin login
│   ├── dashboard/              # Admin dashboard
│   ├── products/               # Product management
│   └── orders/                 # Order management
└── api/                        # API routes
    ├── products/               # Product APIs
    ├── orders/                 # Order APIs
    └── admin/                  # Admin APIs

components/                     # Reusable components
lib/                           # Utility functions
models/                        # MongoDB models
store/                         # State management
scripts/                       # Helper scripts

═══════════════════════════════════════════════════════════════════════
USEFUL COMMANDS
═══════════════════════════════════════════════════════════════════════

npm run dev         # Start development server
npm run build       # Build for production
npm start           # Start production server
npm run seed        # Add sample products to database
npm run lint        # Check code quality

═══════════════════════════════════════════════════════════════════════
DOCUMENTATION FILES
═══════════════════════════════════════════════════════════════════════

README.md           # Complete project documentation
DEPLOYMENT.md       # Step-by-step deployment guide
QUICKSTART.md       # Quick start guide
.env.example        # Environment variables template

═══════════════════════════════════════════════════════════════════════
TROUBLESHOOTING
═══════════════════════════════════════════════════════════════════════

Problem: "Cannot connect to MongoDB"
Solution: Check MONGODB_URI in .env file
         Ensure IP is whitelisted in MongoDB Atlas

Problem: "Email not sending"
Solution: Use Gmail App Password (not regular password)
         Enable 2-Step Verification first

Problem: "Admin login not working"
Solution: Check ADMIN_EMAIL and ADMIN_PASSWORD in .env
         Clear browser cache

Problem: "npm install fails"
Solution: Delete node_modules folder
         Delete package-lock.json
         Run npm install again

Problem: "Port 3000 already in use"
Solution: Kill the process or use different port:
         npm run dev -- -p 3001

═══════════════════════════════════════════════════════════════════════
SECURITY NOTES
═══════════════════════════════════════════════════════════════════════

⚠️ IMPORTANT:
- Change default admin password immediately
- Never commit .env file to Git
- Use strong JWT_SECRET (32+ characters)
- Enable 2FA on all accounts
- Regularly update dependencies

═══════════════════════════════════════════════════════════════════════
CUSTOMIZATION
═══════════════════════════════════════════════════════════════════════

Colors: Edit tailwind.config.ts (primary colors)
Logo: Update components/Navbar.tsx
Content: Edit app/page.tsx for homepage content
Categories: Modify models/Product.ts

═══════════════════════════════════════════════════════════════════════
SUPPORT & RESOURCES
═══════════════════════════════════════════════════════════════════════

Next.js Docs: https://nextjs.org/docs
MongoDB Docs: https://docs.mongodb.com
Vercel Docs: https://vercel.com/docs
TailwindCSS: https://tailwindcss.com/docs

═══════════════════════════════════════════════════════════════════════
NEXT STEPS AFTER SETUP
═══════════════════════════════════════════════════════════════════════

1. ✅ Add your products with real images
2. ✅ Customize colors and branding
3. ✅ Test complete order flow
4. ✅ Set up custom domain
5. ✅ Configure WhatsApp notifications (optional)
6. ✅ Add Google Analytics (optional)
7. ✅ Deploy to production

═══════════════════════════════════════════════════════════════════════

🎉 Congratulations! Your Makhana eCommerce store is ready to launch!

For detailed deployment instructions, see DEPLOYMENT.md

═══════════════════════════════════════════════════════════════════════
